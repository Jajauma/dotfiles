" move state files to one directory
let s:vimfiles_path = resolve(expand('<sfile>:p:h'))
let s:tmp_path = fnamemodify(s:vimfiles_path, ':p') .. 'tmp'
let &viminfofile = fnamemodify(s:tmp_path, ':p') .. 'viminfo'
let &directory = s:tmp_path .. '//'

if &t_Co > 2 || has('gui_running')
  syntax on
endif

filetype plugin indent on
set autoindent
set encoding=utf8
set expandtab shiftwidth=2
set fileformats=unix,dos
set formatoptions=tcqj
set hlsearch
set incsearch
set laststatus=2
set list
set listchars=tab:▸·,trail:·
set modeline
set noesckeys " possibly helps with slow leave from insert mode
set nowrapscan
set relativenumber
set shortmess-=S
set showcmd
set statusline=%<%n\ %F\ %y%m%r%=%-14.(%l,%c%V%)\ %P
set ttyfast
set viminfo='20,<50,s10,h
set visualbell t_vb=

" use forward slash for path separator
if has('win32') && exists('+shellslash')
  set shellslash
endif

" :terminal configuration and workarounds
if has('terminal')
  if has('win32') && executable('pwsh')
    nnoremap <silent> <leader>t :exe 'term ++close' functions#GetPSCommand()<CR>
    nnoremap <silent> <leader>T :exe 'vert term ++close' functions#GetPSCommand()<CR>
  endif
  if has('win32') && executable('py')
    nnoremap <silent> <leader>p :term ++close py<CR>
    nnoremap <silent> <leader>P :vert term ++close py<CR>
  endif
  " fix erase last word with Ctrl+BackSpace
  tmap <expr> <C-BS> functions#SendToTerm("\<C-W>")
  " fix typing occasional Shift+Space
  tmap <expr> <S-Space> functions#SendToTerm("\<Space>")
  if exists('##TerminalWinOpen')
    augroup vim_terminal
      autocmd!
      au TerminalWinOpen * setlocal nonumber norelativenumber
    augroup END
  endif
endif

" saner search (n always jumps forward, N always jump backwards)
nnoremap <expr> n 'Nn'[v:searchforward]
nnoremap <expr> N 'nN'[v:searchforward]
" quick save
nnoremap <silent> <F2> :update<CR>
" go to previously edited files
nnoremap <F4> :browse oldfiles<CR>
" quickfix navigation
nnoremap <F6> <Plug>(qf_qf_toggle_stay)
nnoremap <F7> :cprevious<CR>
nnoremap <F8> :cnext<CR>
" fix accidental :E to be :e
cnoreabbrev E e
" unmap F1 (never used for its intended purpose)
noremap <F1> <nop>
noremap! <F1> <nop>

" insert directory of the current file in the command line
cnoremap <expr> <C-H> functions#GetParentDirPrompt()

" workaround for gx (which went unusable at some point)
if has('win32')
  let g:nogx = 1
  let g:netrw_nogx = 1
  nnoremap <silent> gx :call functions#OpenUrl(mode())<CR>
  vnoremap <silent> gx :<c-u>call functions#OpenUrl(visualmode())<cr>
endif

" sort words separated by commas
nnoremap <leader>s :set operatorfunc=functions#CommaSortOperator<cr>g@
vnoremap <leader>s :<c-u>call functions#CommaSortOperator(visualmode())<cr>
